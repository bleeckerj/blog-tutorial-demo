---
import { getCollection } from 'astro:content';
import BlogPost from '../../../components/BlogPost.astro';
import BaseLayout from '../../../layouts/BaseLayout.astro';

const year = Astro.params.year;
const month = Astro.params.month;


// Fetch your blog posts based on year and month
// Example: const posts = await fetchPostsForMonth(year, month);
export async function getStaticPaths() {
    const posts = await getCollection('blog');
    const paths = new Set();

    posts.forEach(post => {
        const pubDate = new Date(post.data.pubDate);
        const year = pubDate.getFullYear();
        const month = String(pubDate.getMonth() + 1).padStart(2, '0'); // Ensure month is 2 digits

        // Construct the path
        const path = `/blog/${year}/${month}`;
        paths.add(path);
    });

    // Convert the Set into an array of path objects
    return Array.from(paths).map(path => ({
        params: {
            year: path.split('/')[2], // Extract year from the path
            month: path.split('/')[3] // Extract month from the path
        }
    }));
}
const allPosts = await getCollection('blog');
const posts = allPosts.filter(post => {
    const pubDate = new Date(post.data.pubDate);
    return pubDate.getFullYear().toString() === year && 
           String(pubDate.getMonth() + 1).padStart(2, '0') === month;
});
---
<BaseLayout pageTitle={'Blog -  {year} / {month}'}>
    <ul style="list-style: none">
      {
        posts.map((post) => (
          <BlogPost url={`/blog/${post.slug}/`} isDraft={post.data.isDraft}  author={post.data.author} pubDate={post.data.pubDate} title={post.data.title} description={post.data.description} />
        ))
      }
    </ul>
  </BaseLayout>
  
<!-- <html>
<head>
    <title>Blog - {year}/{month}</title>
</head>
<body>
    {/* Render your posts here */}
    <h1>Posts for {year}/{month}</h1>
    <ul>
        {filteredPosts.map(post => (
            <li key={post.url}>{post.data}  `/blog/{post.slug}/`
                <a href={`/blog/${post.slug}/`}>{post.data.title}</a>
                <br/>
                Published on: {new Date(post.data.pubDate).toLocaleDateString()}
            </li>
        ))}
    </ul>
</body>
</html> -->
