---
import { getCollection } from 'astro:content';
import BlogPost from '../../../components/BlogPost.astro';
import BaseLayout from '../../../layouts/BaseLayout.astro';

const year = Astro.params.year;
const month = Astro.params.month;


// Fetch your blog posts based on year and month
// Example: const posts = await fetchPostsForMonth(year, month);
export async function getStaticPaths() {
    const posts = await getCollection('blog');
    const paths = new Set();

    posts.forEach(post => {
        const pubDate = new Date(post.data.pubDate);
        const year = pubDate.getFullYear();
        const month = String(pubDate.getMonth() + 1).padStart(2, '0'); // Ensure month is 2 digits

        // Construct the path
        const path = `/blog/${year}/${month}`;
        paths.add(path);
    });

    // Convert the Set into an array of path objects
    return Array.from(paths).map(path => ({
        params: {
            year: path.split('/')[2], // Extract year from the path
            month: path.split('/')[3] // Extract month from the path
        }
    }));
}
const allPosts = await getCollection('blog');
const posts = allPosts.filter(post => {
    const pubDate = new Date(post.data.pubDate);
    return pubDate.getFullYear().toString() === year && 
           String(pubDate.getMonth() + 1).padStart(2, '0') === month;
});
import { z } from 'zod';

// Define the schema
const postSchema = z.object({
  title: z.string(),
  pubDate: z.date(),
  description: z.string().optional(),
  seo: z.string().default('Design Fiction'),
  author: z.string(),
  authorUsername: z.string().default('@nearfuturelab'),
  image: z.object({
    url: z.string().default('https://backoffice.nearfuturelaboratory.com/favicon.svg'),
    altText: z.string().default('Near Future Laboratory Design Fiction Imagine Harder')
  }).optional(),
  og_type: z.string().default('article'),
  tags: z.array(z.string()).optional(),
  isDraft: z.boolean().default(true),
  containsImage: z.boolean().optional(),
});

// Create a complete instance
const frontmatter = postSchema.parse({
  title: "Back Office at the Near Future Laboratory",
  pubDate: new Date('2024-01-01'),
  description: "Imagination leads to beautiful, unexpected possibilities. It's Time to Imagine Harder.",
  seo: "Design Fiction",
  author: "Julian Bleecker",
  authorUsername: "@darthjulian",
  // image: {
  //   url: "https://example.com/image.jpg",
  //   altText: "An image depicting future technology"
  // },
  og_type: "site",
  tags: ["Design Fiction", "Futures", "Design Innovation"],
  isDraft: false,
  containsImage: false,
});


---
<BaseLayout pageTitle={'Blog -  {year} / {month}'}>
    <ul style="list-style: none">
      {
        posts.map((post) => (
          <BlogPost url={`/blog/${post.slug}/`} isDraft={post.data.isDraft}  author={post.data.author} pubDate={post.data.pubDate} title={post.data.title} description={post.data.description} />
        ))
      }
    </ul>
  </BaseLayout>
