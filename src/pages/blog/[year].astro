---
import { getCollection } from 'astro:content';
import MarkdownPostLayout from '../../layouts/MarkdownPostLayout.astro';

type PathType = {
    params: {
        year: string;
        month: string;
    };
    props: {
        posts: any[]; // Replace 'any' with the actual type of your posts if known
    };
};


export async function getStaticPaths() {

const posts = await getCollection('blog');
const postYears = new Map();

posts.forEach(post => {
    const year = post.data.pubDate.getFullYear();

    if (!postYears.get(year)) {
        postYears.set(year, []);
    }

    postYears.get(year).push(post);
});


return [...postYears.entries()].map(([year, posts]) => ({
    params: { year },
    props: { posts }
}));
};
//const { posts } = Astro.props;
//const { year, month } = Astro.params;
//console.log(Astro.params);
//console.log(posts);
//console.log(year);
//console.log(month);
//console.log("Year:", Astro.request); // Should log the year
//console.log("Month:", Astro.request.params.month); // Should log the month
//console.log("Hello?")
//console.log(entry);
const { year } = Astro.params;
const { posts } = Astro.props;
---

<main>
    <h2>Posts in {year}</h2>
    <section>
        <ul>
            {
                posts.map((post) => (
                    <li>
                        <time datetime={post.data.pubDate.toISOString()}>
                            {post.data.pubDate.toLocaleDateString('en-us', {
                                year: 'numeric',
                                month: 'short',
                                day: 'numeric'
                            })}
                        </time>
                        <a href={`/blog/${post.slug}/`}>{post.data.title}</a>
                    </li>
                ))
            }
        </ul>
    </section>
</main>