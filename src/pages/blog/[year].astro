---
// src/pages/blog/years/[year].astro
import BaseLayout from '../../layouts/BaseLayout.astro';
import BlogPost from '../../components/BlogPost.astro';
// import Greeting from '../../../components/Greeting.jsx';
// import Archive from '../../../components/Archive.astro.jsx'
// import { getPostsByYear } from '../../../utils/getPostsByYears.js';

import { getCollection } from 'astro:content';
//import MarkdownPostLayout from '../../../layouts/MarkdownPostLayout.astro';
type PathType = {
    params: {
        year: string;
        month: string;
    };
    props: {
        posts: any[]; // Replace 'any' with the actual type of your posts if known
    };
};
// console.log('Params:', Astro.request); // Check what params are available

//const { posts } = Astro.props;
//console.log(Astro.props);
const pageTitle = " Archive";
const year = Astro.params.year;
const allPosts = await getCollection('blog');
const postsForYear = allPosts.filter(post => 
    new Date(post.data.pubDate).getFullYear().toString() === year
).sort((a, b) => 
    new Date(b.data.pubDate) - new Date(a.data.pubDate)
);



export async function getStaticPaths() {

const posts = await getCollection('blog');
const postYears = new Map();

posts.forEach(post => {
    const year = post.data.pubDate.getFullYear();

    if (!postYears.get(year)) {
        postYears.set(year, []);
    }

    postYears.get(year).push(post);
});


return [...postYears.entries()].map(([year, posts]) => ({
    params: { year },
    props: { posts }
}));
};



---
<BaseLayout pageTitle={pageTitle}>
    
        {
          postsForYear.map((post) => (
            <BlogPost url={`/blog/${post.slug}/`} author={post.data.author} pubDate={post.data.pubDate} title={post.data.title} description={post.data.description} />
          ))
        }
      
</BaseLayout>