---
import { getCollection } from 'astro:content';
import BaseLayout from "../../../layouts/BaseLayout.astro";
import DigestPost from "../../../components/DigestPost.astro";

const year = Astro.params.year;
const month = Astro.params.month;
const pageTitle = "Digest " + month + "/" + year+ " from the Near Future Laboratory Discord";

// Fetch your digest posts based on year and month
// Example: const posts = await fetchPostsForMonth(year, month);
export async function getStaticPaths() {
    const posts = await getCollection('digest');
    const paths = new Set();

    posts.forEach(post => {
        const pubDate = new Date(post.data.pubDate);
        const year = pubDate.getFullYear();
        const month = String(pubDate.getMonth() + 1).padStart(2, '0'); // Ensure month is 2 digits

        // Construct the path
        const path = `/digest/${year}/${month}`;
        paths.add(path);
    });

    // Convert the Set into an array of path objects
    return Array.from(paths).map(path => ({
        params: {
            year: path.split('/')[2], // Extract year from the path
            month: path.split('/')[3] // Extract month from the path
        }
    }));
}

const allPosts = await getCollection('digest');
const filteredPosts = allPosts.filter(post => {
    const pubDate = new Date(post.data.pubDate);
    return pubDate.getFullYear().toString() === year && 
           String(pubDate.getMonth() + 1).padStart(2, '0') === month;
});
---
<BaseLayout pageTitle={pageTitle}>
    <p>Digest from the Near Future Laboratory Discord.</p>
    <ul>
      {
        filteredPosts.map((post) => (
        <DigestPost url={`/digest/${post.slug}/`} pubDate={post.data.pubDate} author={post.data.author} message={post.data.cleanContent} channel={post.data.channel} summary={post.data.summary} />
        ))
      }
    </ul>
  </BaseLayout>