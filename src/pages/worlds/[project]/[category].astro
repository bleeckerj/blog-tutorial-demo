---
import { getCollection } from 'astro:content';
import BaseLayout from "../../../layouts/BaseLayout.astro";
import ProjectPost from "../../../components/ProjectPost.astro";

//const year = Astro.params.year;
const project = Astro.params.project;
const category = Astro.params.category;

const pageTitle = "Test " + project + "/" + category+ " from the Near Future Laboratory Projects Database";

// Fetch your digest posts based on year and month
// Example: const posts = await fetchPostsForMonth(year, month);
export async function getStaticPaths() {
    const posts = await getCollection('projects');
    const paths = new Set();
    posts.forEach(post => {
        const pubDate = new Date(post.data.pubDate);
        const category = post.data.category;
        const year = pubDate.getFullYear();
        const month = String(pubDate.getMonth() + 1).padStart(2, '0'); // Ensure month is 2 digits
        // Construct the path
        const project = post.data.project;

        const path = `/projects/${project}/${category}`;
        paths.add(path);
    });
    // Convert the Set into an array of path objects
    return Array.from(paths).map(path => ({
        params: {
            project: path.split('/')[2], // Extract project from the path
            category: path.split('/')[3] // Extract category from the path
        }
    }));
}
const allPosts = await getCollection('projects');
const filteredPosts = allPosts.filter(post => {
    const pubDate = new Date(post.data.pubDate);
    const postProject = post.data.project
    const projectCategory = post.data.category
    //console.log(post.id + ' ' + postProject + ' ' + projectCategory + ' ' + project + ' ' + category)
    return (projectCategory === category && postProject === project);
    // return pubDate.getFullYear().toString() === year && 
    //        String(pubDate.getMonth() + 1).padStart(2, '0') === month;
});
---
<BaseLayout pageTitle={pageTitle}>
    <p>Digest from the Near Future Laboratory Discord.</p>
    projects/[project]/[month].astro
    
    Ahoy ${project}
    {
        
    }

    <ul>{ filteredPosts.length}
      {
        filteredPosts.map((post) => (
        <h2>HEY - {post.data.category} {post.data.collection} {post.data.summary} manufactured by {post.data.meta?.manufacturer}</h2>
        <ProjectPost url={`/projects/${post.data.project}/${post.data.category}/${post.slug}`} pubDate={post.data.pubDate} message={post.data} summary={post.data.summary} meta={post.data.meta}/>
        ))
      }
    </ul>
  </BaseLayout>